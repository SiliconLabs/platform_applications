/***************************************************************************//**
 * @file
 * @brief Top level application functions
 *******************************************************************************
 * # License
 * <b>Copyright 2022 Silicon Laboratories Inc. www.silabs.com</b>
 *******************************************************************************
 *
 * SPDX-License-Identifier: Zlib
 *
 * The licensor of this software is Silicon Laboratories Inc.
 *
 * This software is provided 'as-is', without any express or implied
 * warranty. In no event will the authors be held liable for any damages
 * arising from the use of this software.
 *
 * Permission is granted to anyone to use this software for any purpose,
 * including commercial applications, and to alter it and redistribute it
 * freely, subject to the following restrictions:
 *
 * 1. The origin of this software must not be misrepresented; you must not
 *    claim that you wrote the original software. If you use this software
 *    in a product, an acknowledgment in the product documentation would be
 *    appreciated but is not required.
 * 2. Altered source versions must be plainly marked as such, and must not be
 *    misrepresented as being the original software.
 * 3. This notice may not be removed or altered from any source distribution.
 *
 *******************************************************************************
 * # Experimental Quality
 * This code has not been formally tested and is provided as-is. It is not
 * suitable for production environments. In addition, this code will not be
 * maintained and there may be no bug maintenance planned for these resources.
 * Silicon Labs may update projects from time to time.
 ******************************************************************************/

#ifndef APP_H
#define APP_H

#define LESENSE_LCSENSE_SENSOR_CH_CONF                                      \
  {                                                                         \
    true,                    /* Enable scan channel. */                     \
    true,                    /* Enable the assigned pin on scan channel. */ \
    false,                   /* Disable interrupts on channel. */           \
    lesenseChPinExLow,       /* GPIO pin is outputting low during the excitation
                              * period. */ \
    lesenseChPinIdleDis,     /* GPIO pin output is disabled during the idle
                              * period. */ \
    false,                   /* Do not use alternate excitation pins for
                              * excitation. */ \
    true,                    /* Enabled to shift results from this channel to
                              * the decoder register. */                  \
    false,                   /* Disabled to invert the scan result bit.*/ \
    true,                    /* Enabled to store counter value in the result
                              * buffer. */                                 \
    lesenseClkHF,            /* Use the HF clock for excitation timing. */ \
    lesenseClkLF,            /* Use the LF clock for sample timing. */     \
    0x0FU,                   /* Excitation time is set to 15 (+1) excitation
                              * clock cycles. */ \
    0x02U,                   /* Sample delay is set to 2(+1) sample clock
                              * cycles. */ \
    0x00U,                   /* Measure delay is set to 0 excitation clock
                              * cycles.*/ \
    0x000U,                  /* ACMP threshold has been set to 0x7FF - not used,
                              * controlled by the ACMP registers*/           \
    lesenseSampleModeCounter,/* ACMP output will be used in comparison. */   \
    lesenseSetIntNone,       /* No interrupt is generated by the channel. */ \
    0x00U,                   /* Counter threshold has bee set to 0x00, will be
                              * set during calibration. */ \
    lesenseCompModeLess,     /* Compare mode has been set to trigger interrupt
                              * on "less". */ \
    lesenseEvalModeThreshold, /* Evaluation mode has been set to trigger
                               * interrupt on threshold. */                 \
    0x03U                     /* No offset for IADC or ACMP interaction. */ \
  }

/***************************************************************************//**
 * Initialize application.
 ******************************************************************************/
void app_init(void);

/***************************************************************************//**
 * App ticking function.
 ******************************************************************************/
void app_process_action(void);

#endif  // APP_H
